(()=>{"use strict";var e={430:(e,n,t)=>{t.d(n,{A:()=>A});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const A=i},208:(e,n,t)=>{t.d(n,{A:()=>A});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([e.id,'.hidden{\n  display: none !important;\n}\n\n.game-container {\n  display: flex;\n  gap: 20px;\n  justify-content: start;\n  align-items: start;\n}\n\n.container-one,\n.container-two,\n.container-three {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.p-game-board,\n.c-game-board {\n  border: 3px solid black;\n  padding: 10px;\n  background-color: rgba(255, 255, 255, 0.851);\n  height: 300px;\n  width: 300px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n.d-board {\n  border: 3px solid black;\n  padding: 10px;\n  background-color: rgba(255, 255, 255, 0.851);\n  height: 300px;\n  width: 300px; \n}\n\n.cell {\n  position: relative;\n  border: 0.5px solid rgb(116, 116, 116);\n}\n\n.cell:hover {\n  z-index: 99;\n  transform: scale(1.2);\n  border-width: 2px;\n  /* background-color: rgb(172, 234, 172); */\n\n  cursor: pointer;\n}\n\n.cell--ship {\n  background-color: #a9a9ff;\n}\n\n.cell--unavailable {\n  background-color: #d8d8d8;\n}\n\n.cell--undiscovered {\n  background-color: rgba(255, 255, 255, 0.851) !important;\n}\n\n.cell--miss {\n  background-color: #fafad2;\n  position: relative;\n}\n\n.cell--miss::after {\n  content: ""; /* Required for the pseudo-element to be generated */\n  position: absolute;\n  width: 5px; /* Size of the dot */\n  height: 5px; /* Size of the dot */\n  background-color: black; /* Color of the dot */\n  top: 50%; /* Center vertically */\n  left: 50%; /* Center horizontally */\n  border-radius: 50%; /* Makes the shape a circle */\n  transform: translate(-50%, -50%); /* Offset the dot to truly center it */\n}\n\n.cell--hit {\n  position: relative;\n  background-color: #fafad2;\n  border-color: #ff0000;\n  border-width: 1.5px;\n}\n\n.cell--hit::before,\n.cell--hit::after {\n  content: "";\n  position: absolute;\n  width: 2px; /* Width of the "X" lines */\n  height: 150%; /* Adjusted to fit the square */\n  top: -25%; /* Adjusted for better centering */\n  left: 50%; /* Center horizontally */\n  background-color: red; /* Color of the "X" */\n  transform: translateX(-50%); /* Center the line\'s width */\n}\n\n.cell--hit::before {\n  transform: translateX(-50%) rotate(45deg); /* Center and rotate one line to form one slash of the "X" */\n}\n\n.cell--hit::after {\n  transform: translateX(-50%) rotate(-45deg); /* Center and rotate the other line to form the other slash of the "X" */\n}\n\n.next-piece-box {\n  height: 150px;\n  width: 150px;\n  border: 2px solid black;\n  border-radius: 10px;\n  background-color: rgb(238, 238, 238);\n}\n\n.d--game-over-screen {\n  background-color: #a9ffa9;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\nh2{\n  font-size: 20px;\n}\nh3{\n  font-size: 30px;\n}\nh4{\n  font-size: 20px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,SAAS;EACT,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;;;EAGE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;;EAEE,uBAAuB;EACvB,aAAa;EACb,4CAA4C;EAC5C,aAAa;EACb,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;AACrC;AACA;EACE,uBAAuB;EACvB,aAAa;EACb,4CAA4C;EAC5C,aAAa;EACb,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,sCAAsC;AACxC;;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,iBAAiB;EACjB,0CAA0C;;EAE1C,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uDAAuD;AACzD;;AAEA;EACE,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,WAAW,EAAE,oDAAoD;EACjE,kBAAkB;EAClB,UAAU,EAAE,oBAAoB;EAChC,WAAW,EAAE,oBAAoB;EACjC,uBAAuB,EAAE,qBAAqB;EAC9C,QAAQ,EAAE,sBAAsB;EAChC,SAAS,EAAE,wBAAwB;EACnC,kBAAkB,EAAE,6BAA6B;EACjD,gCAAgC,EAAE,sCAAsC;AAC1E;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;;EAEE,WAAW;EACX,kBAAkB;EAClB,UAAU,EAAE,2BAA2B;EACvC,YAAY,EAAE,+BAA+B;EAC7C,SAAS,EAAE,kCAAkC;EAC7C,SAAS,EAAE,wBAAwB;EACnC,qBAAqB,EAAE,qBAAqB;EAC5C,2BAA2B,EAAE,4BAA4B;AAC3D;;AAEA;EACE,yCAAyC,EAAE,4DAA4D;AACzG;;AAEA;EACE,0CAA0C,EAAE,wEAAwE;AACtH;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,oCAAoC;AACtC;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB",sourcesContent:['.hidden{\n  display: none !important;\n}\n\n.game-container {\n  display: flex;\n  gap: 20px;\n  justify-content: start;\n  align-items: start;\n}\n\n.container-one,\n.container-two,\n.container-three {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.p-game-board,\n.c-game-board {\n  border: 3px solid black;\n  padding: 10px;\n  background-color: rgba(255, 255, 255, 0.851);\n  height: 300px;\n  width: 300px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n.d-board {\n  border: 3px solid black;\n  padding: 10px;\n  background-color: rgba(255, 255, 255, 0.851);\n  height: 300px;\n  width: 300px; \n}\n\n.cell {\n  position: relative;\n  border: 0.5px solid rgb(116, 116, 116);\n}\n\n.cell:hover {\n  z-index: 99;\n  transform: scale(1.2);\n  border-width: 2px;\n  /* background-color: rgb(172, 234, 172); */\n\n  cursor: pointer;\n}\n\n.cell--ship {\n  background-color: #a9a9ff;\n}\n\n.cell--unavailable {\n  background-color: #d8d8d8;\n}\n\n.cell--undiscovered {\n  background-color: rgba(255, 255, 255, 0.851) !important;\n}\n\n.cell--miss {\n  background-color: #fafad2;\n  position: relative;\n}\n\n.cell--miss::after {\n  content: ""; /* Required for the pseudo-element to be generated */\n  position: absolute;\n  width: 5px; /* Size of the dot */\n  height: 5px; /* Size of the dot */\n  background-color: black; /* Color of the dot */\n  top: 50%; /* Center vertically */\n  left: 50%; /* Center horizontally */\n  border-radius: 50%; /* Makes the shape a circle */\n  transform: translate(-50%, -50%); /* Offset the dot to truly center it */\n}\n\n.cell--hit {\n  position: relative;\n  background-color: #fafad2;\n  border-color: #ff0000;\n  border-width: 1.5px;\n}\n\n.cell--hit::before,\n.cell--hit::after {\n  content: "";\n  position: absolute;\n  width: 2px; /* Width of the "X" lines */\n  height: 150%; /* Adjusted to fit the square */\n  top: -25%; /* Adjusted for better centering */\n  left: 50%; /* Center horizontally */\n  background-color: red; /* Color of the "X" */\n  transform: translateX(-50%); /* Center the line\'s width */\n}\n\n.cell--hit::before {\n  transform: translateX(-50%) rotate(45deg); /* Center and rotate one line to form one slash of the "X" */\n}\n\n.cell--hit::after {\n  transform: translateX(-50%) rotate(-45deg); /* Center and rotate the other line to form the other slash of the "X" */\n}\n\n.next-piece-box {\n  height: 150px;\n  width: 150px;\n  border: 2px solid black;\n  border-radius: 10px;\n  background-color: rgb(238, 238, 238);\n}\n\n.d--game-over-screen {\n  background-color: #a9ffa9;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\nh2{\n  font-size: 20px;\n}\nh3{\n  font-size: 30px;\n}\nh4{\n  font-size: 20px;\n}'],sourceRoot:""}]);const A=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],A=0;A<e.length;A++){var l=e[A],c=o.base?l[0]+o.base:l[0],s=a[c]||0,d="".concat(c," ").concat(s);a[c]=s+1;var p=t(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=r(u,o);o.byIndex=A,n.splice(A,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=t(a[i]);n[A].references--}for(var l=o(e,r),c=0;c<a.length;c++){var s=t(a[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=l}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),o=t(825),r=t.n(o),a=t(659),i=t.n(a),A=t(56),l=t.n(A),c=t(540),s=t.n(c),d=t(113),p=t.n(d),u=t(430),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=i().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=s(),n()(u.A,h),u.A&&u.A.locals&&u.A.locals;var f=t(208),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=s(),n()(f.A,C),f.A&&f.A.locals&&f.A.locals;const m=e=>{let n=0;return{hit:()=>{n+=1},isSunk:()=>n>=e,getSize:()=>e}},b=()=>{const e=[m(4),m(3),m(3),m(2),m(2),m(2),m(1),m(1),m(1),m(1)];let n=0;const t=Array.from({length:10},(()=>Array.from({length:10},(()=>({type:"empty",ship:null,hitStatus:"undiscovered"})))));return{getGrid:()=>t,placeShip:(o=e[n],r,a)=>{if(o){let e=((e,n,o)=>{let r=!0,a=n[0],i=n[1];for(let n=0;n<e;n++){if(a>9||i>9)return!1;const e=t[i][a];if(!e||"empty"!==e.type){r=!1;break}o?a+=1:i+=1}return r})(o.getSize(),r,a);if(e){n++;const e=((e,n,o)=>{const r=[];let a=n[0],i=n[1];for(let n=0;n<e;n++)r.push(t[i][a]),o?a+=1:i+=1;return r})(o.getSize(),r,a);e.forEach((e=>{e.type="ship",e.ship=o}));const i=((e,n,o)=>{const r=[],a=[0,1,1,1,0,-1,-1,-1],i=[-1,-1,0,1,1,1,0,-1];let A=n[0],l=n[1];for(let n=0;n<e;n++){for(let e=0;e<8;e++){const n=A+a[e],o=l+i[e];n>-1&&n<10&&o>-1&&o<10&&"empty"===t[o][n].type&&!r.includes(t[o][n])&&r.push(t[o][n])}o?A+=1:l+=1}return r})(o.getSize(),r,a);i.forEach((e=>e.type="unavailable"))}return e}return!1},fireShot:e=>{const n=e[0],o=e[1];return"undiscovered"===t[o][n].hitStatus&&("empty"===t[o][n].type||"unavailable"===t[o][n].type?(t[o][n].hitStatus="missed","miss"):"ship"===t[o][n].type?(t[o][n].hitStatus="hit",t[o][n].ship.hit(),"hit"):void 0)},allShipsSunk:()=>e.every((e=>e.isSunk()))}};(async()=>{const e=e=>{const n=e.gameBoard.getGrid().flat(),t=e.attack?document.querySelector(".c-game-board"):document.querySelector(".p-game-board");n.forEach((n=>{const o=document.createElement("div");o.className=e.attack?"cell cell--undiscovered":"cell","ship"===n.type?o.classList.add("cell--ship"):"unavailable"===n.type&&o.classList.add("cell--unavailable"),t.appendChild(o)}))},n=async e=>new Promise(((n,t)=>{(e.attack?document.querySelector(".c-game-board"):document.querySelector(".p-game-board")).querySelectorAll(".cell").forEach(((e,t)=>{e.addEventListener("click",(e=>{const o=t%10,r=Math.floor(t/10%10);n([[o,r],t])}),{once:!0})}))})),t=(e,n)=>{const t=(e.attack?document.querySelector(".c-game-board"):document.querySelector(".p-game-board")).querySelectorAll(".cell")[n];t.classList.contains("cell--ship")?t.className="cell cell--hit":(t.classList.contains("cell--unavailable")||"cell cell--undiscovered"===t.className||"cell"===t.className)&&(t.className="cell cell--miss")},o=e=>{const n=document.querySelector(".d--game-over-screen");n.querySelector("span").textContent=e.attack?"COMPUTER":"YOU",n.querySelector("button").addEventListener("click",(()=>{n.classList.add("hidden")})),n.classList.remove("hidden")},r={gameBoard:b()},a={gameBoard:b(),attack:()=>{const e=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());return[[e,n],10*n+e]}};let i=r;const A=()=>i===r?a:r;r.gameBoard.placeShip(void 0,[0,0],!0),r.gameBoard.placeShip(void 0,[0,2],!0),r.gameBoard.placeShip(void 0,[0,4],!0),r.gameBoard.placeShip(void 0,[0,6],!0),r.gameBoard.placeShip(void 0,[0,8],!0),r.gameBoard.placeShip(void 0,[5,0],!0),r.gameBoard.placeShip(void 0,[5,2],!0),r.gameBoard.placeShip(void 0,[5,4],!0),r.gameBoard.placeShip(void 0,[5,6],!0),r.gameBoard.placeShip(void 0,[5,8],!0),a.gameBoard.placeShip(void 0,[0,0],!0),a.gameBoard.placeShip(void 0,[0,2],!0),a.gameBoard.placeShip(void 0,[0,4],!0),a.gameBoard.placeShip(void 0,[0,6],!0),a.gameBoard.placeShip(void 0,[0,8],!0),a.gameBoard.placeShip(void 0,[5,0],!0),a.gameBoard.placeShip(void 0,[5,2],!0),a.gameBoard.placeShip(void 0,[5,4],!0),a.gameBoard.placeShip(void 0,[5,6],!0),a.gameBoard.placeShip(void 0,[5,8],!0),e(r),e(a);let l=!0;const c=async()=>{const e=i.attack?i.attack():await n(A());console.log({fireCoords:e});const o=A().gameBoard.fireShot(e[0]);return"hit"===o?(t(A(),e[1]),console.log("valid shot; hit"),!A().gameBoard.allShipsSunk()&&c()):"miss"===o?(console.log("valid shot; miss"),t(A(),e[1]),!0):(console.log("invalid shot"),c())};for(;l;)l=await c(),l&&(i=A());o(i)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,